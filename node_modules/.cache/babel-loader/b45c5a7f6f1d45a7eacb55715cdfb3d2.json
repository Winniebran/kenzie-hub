{"ast":null,"code":"var _jsxFileName = \"/Users/winniebran/Desktop/Kenzie-Academy/Entregas-Kenzie/Modulo3/sprint3/react-entrega-kenzie-hub-winniebran/src/contexts/TechsContext.jsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState } from \"react\";\nimport { toast } from \"react-toastify\";\nimport { ApiRequests } from \"../services/apiRequests\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TechsContext = /*#__PURE__*/createContext({});\nexport const TechsProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [techs, userTechs] = useState([]);\n\n  const submitTechsModal = async data => {\n    // reset()\n    try {\n      const response = await ApiRequests.post(\"/users/techs\", data);\n      userTechs(response.data.user);\n      toast.success(\"Tecnologia adicionada com sucesso.\");\n      console.log(response);\n    } catch (error) {\n      console.log(error);\n      toast.error(\"Tecnologia não pode ser adicionada\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(TechsContext.Provider, {\n    value: {\n      techs,\n      userTechs\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TechsProvider, \"F+Mtb/Xv8SZQIeR6KJpyHRM0Ago=\");\n\n_c = TechsProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"TechsProvider\");","map":{"version":3,"names":["createContext","useState","toast","ApiRequests","TechsContext","TechsProvider","children","techs","userTechs","submitTechsModal","data","response","post","user","success","console","log","error"],"sources":["/Users/winniebran/Desktop/Kenzie-Academy/Entregas-Kenzie/Modulo3/sprint3/react-entrega-kenzie-hub-winniebran/src/contexts/TechsContext.jsx"],"sourcesContent":["import { createContext, useState } from \"react\";\nimport { toast } from \"react-toastify\";\nimport { ApiRequests } from \"../services/apiRequests\";\n\nexport const TechsContext = createContext({});\n\nexport const TechsProvider = ({ children }) => {\n    const [techs, userTechs] = useState([])\n\n    const submitTechsModal = async (data) => {\n      // reset()\n      try {\n        const response = await ApiRequests.post(\"/users/techs\", data);\n        userTechs(response.data.user);\n        toast.success(\"Tecnologia adicionada com sucesso.\");\n        console.log(response)\n      } catch (error) {\n        console.log(error);\n        toast.error(\"Tecnologia não pode ser adicionada\");\n      }\n    };\n\n\n\n    return (\n        <TechsContext.Provider value={{ techs, userTechs }}>\n          {children}\n        </TechsContext.Provider>\n      );\n}"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,WAAT,QAA4B,yBAA5B;;AAEA,OAAO,MAAMC,YAAY,gBAAGJ,aAAa,CAAC,EAAD,CAAlC;AAEP,OAAO,MAAMK,aAAa,GAAG,QAAkB;EAAA;;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EAC3C,MAAM,CAACC,KAAD,EAAQC,SAAR,IAAqBP,QAAQ,CAAC,EAAD,CAAnC;;EAEA,MAAMQ,gBAAgB,GAAG,MAAOC,IAAP,IAAgB;IACvC;IACA,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMR,WAAW,CAACS,IAAZ,CAAiB,cAAjB,EAAiCF,IAAjC,CAAvB;MACAF,SAAS,CAACG,QAAQ,CAACD,IAAT,CAAcG,IAAf,CAAT;MACAX,KAAK,CAACY,OAAN,CAAc,oCAAd;MACAC,OAAO,CAACC,GAAR,CAAYL,QAAZ;IACD,CALD,CAKE,OAAOM,KAAP,EAAc;MACdF,OAAO,CAACC,GAAR,CAAYC,KAAZ;MACAf,KAAK,CAACe,KAAN,CAAY,oCAAZ;IACD;EACF,CAXD;;EAeA,oBACI,QAAC,YAAD,CAAc,QAAd;IAAuB,KAAK,EAAE;MAAEV,KAAF;MAASC;IAAT,CAA9B;IAAA,UACGF;EADH;IAAA;IAAA;IAAA;EAAA,QADJ;AAKH,CAvBM;;GAAMD,a;;KAAAA,a"},"metadata":{},"sourceType":"module"}