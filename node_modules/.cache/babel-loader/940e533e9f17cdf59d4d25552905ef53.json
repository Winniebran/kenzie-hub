{"ast":null,"code":"var _jsxFileName = \"/Users/winniebran/Desktop/Kenzie-Academy/Entregas-Kenzie/Modulo3/sprint3/react-entrega-kenzie-hub-winniebran/src/contexts/TechsContext.jsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useContext, useState } from \"react\";\nimport { toast } from \"react-toastify\";\nimport { ApiRequests } from \"../services/apiRequests\";\nimport { UserContext } from \"./UserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TechsContext = /*#__PURE__*/createContext({});\nexport const TechsProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const {\n    user,\n    setUser\n  } = useContext(UserContext);\n  const [showAddModal, setShowAddModal] = useState(false);\n  const [showEditAndDeleteModal, setShowEditAndDeleteModal] = useState(false);\n  const [currentTech, setCurrentTech] = useState(\"\");\n\n  const addTechsModal = async data => {\n    // reset()\n    try {\n      const response = await ApiRequests.post(\"/users/techs\", data);\n      toast.success(\"Tecnologia criada com sucesso.\");\n      setShowAddModal(false); //Mantenho as informações do usuário e adiciono uma nova tech as techs que já existem\n\n      setUser({ ...user,\n        techs: [...user.techs, response.data]\n      });\n    } catch (error) {\n      console.log(error);\n      toast.error(\"Essa tecnologia já foi criada, é possível editá-la.\");\n    }\n  };\n\n  const editTechsModal = async (data, id) => {\n    // reset()\n    try {\n      await ApiRequests.put(`/users/techs/${id}`, data);\n      toast.success(\"Tecnologia editada com sucesso.\");\n      setShowEditAndDeleteModal(false); // Utilizei o map para criar uma nova lista editando somente o item selecionado\n\n      const newTechs = user.techs.map(tech => {\n        // Edito o item que tem id identico ao que eu cliquei\n        if (tech.id === id) {\n          //Mantenho todas as informações da tecnologia identicas com exceção do status\n          return { ...tech,\n            status: data.status\n          };\n        } else {\n          //Matenho todas as outras tecnologias da lista como estão\n          return tech;\n        }\n      }); // Atualizei techs inserindo a nova lista\n\n      setUser({ ...user,\n        techs: newTechs\n      });\n    } catch (error) {\n      console.log(error);\n      toast.error(\"Tecnologia não pôde ser editada\");\n    }\n  };\n\n  const deleteTechsModal = async id => {\n    // reset()\n    try {\n      await ApiRequests.delete(`/users/techs/${id}`);\n      toast.success(\"Tecnologia excluída com sucesso.\");\n      setShowEditAndDeleteModal(false); // Utilizei o filter para criar uma nova lista removendo o item selecionado\n\n      const newTechs = user.techs.filter(tech => tech.id !== id); // Atualizei techs inserindo a nova lista\n\n      setUser({ ...user,\n        techs: newTechs\n      });\n    } catch (error) {\n      console.log(error);\n      toast.error(\"Tecnologia não pôde ser excluída\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(TechsContext.Provider, {\n    value: {\n      addTechsModal,\n      editTechsModal,\n      deleteTechsModal,\n      showAddModal,\n      setShowAddModal,\n      showEditAndDeleteModal,\n      setShowEditAndDeleteModal,\n      currentTech,\n      setCurrentTech\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TechsProvider, \"NB3ti4tExCn/kZHXiqkjptPyTrU=\");\n\n_c = TechsProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"TechsProvider\");","map":{"version":3,"names":["createContext","useContext","useState","toast","ApiRequests","UserContext","TechsContext","TechsProvider","children","user","setUser","showAddModal","setShowAddModal","showEditAndDeleteModal","setShowEditAndDeleteModal","currentTech","setCurrentTech","addTechsModal","data","response","post","success","techs","error","console","log","editTechsModal","id","put","newTechs","map","tech","status","deleteTechsModal","delete","filter"],"sources":["/Users/winniebran/Desktop/Kenzie-Academy/Entregas-Kenzie/Modulo3/sprint3/react-entrega-kenzie-hub-winniebran/src/contexts/TechsContext.jsx"],"sourcesContent":["import { createContext, useContext, useState } from \"react\";\nimport { toast } from \"react-toastify\";\nimport { ApiRequests } from \"../services/apiRequests\";\nimport { UserContext } from \"./UserContext\";\n\nexport const TechsContext = createContext({});\n\nexport const TechsProvider = ({ children }) => {\n  const { user, setUser } = useContext(UserContext);\n\n  const [showAddModal, setShowAddModal] = useState(false);\n  const [showEditAndDeleteModal, setShowEditAndDeleteModal] = useState(false);\n  const [currentTech, setCurrentTech] = useState(\"\");\n\n  const addTechsModal = async (data) => {\n    // reset()\n    try {\n      const response = await ApiRequests.post(\"/users/techs\", data);\n      toast.success(\"Tecnologia criada com sucesso.\");\n      setShowAddModal(false);\n      //Mantenho as informações do usuário e adiciono uma nova tech as techs que já existem\n      setUser({ ...user, techs: [...user.techs, response.data] });\n    } catch (error) {\n      console.log(error);\n      toast.error(\"Essa tecnologia já foi criada, é possível editá-la.\");\n    }\n  };\n\n  const editTechsModal = async (data, id) => {\n    // reset()\n    try {\n      await ApiRequests.put(`/users/techs/${id}`, data);\n      toast.success(\"Tecnologia editada com sucesso.\");\n      setShowEditAndDeleteModal(false);\n      // Utilizei o map para criar uma nova lista editando somente o item selecionado\n      const newTechs = user.techs.map((tech) => {\n        // Edito o item que tem id identico ao que eu cliquei\n        if (tech.id === id) {\n          //Mantenho todas as informações da tecnologia identicas com exceção do status\n          return { ...tech, status: data.status };\n        } else {\n          //Matenho todas as outras tecnologias da lista como estão\n          return tech;\n        }\n      });\n      // Atualizei techs inserindo a nova lista\n      setUser({ ...user, techs: newTechs });\n    } catch (error) {\n      console.log(error);\n      toast.error(\"Tecnologia não pôde ser editada\");\n    }\n  };\n\n  const deleteTechsModal = async (id) => {\n    // reset()\n    try {\n      await ApiRequests.delete(`/users/techs/${id}`);\n      toast.success(\"Tecnologia excluída com sucesso.\");\n      setShowEditAndDeleteModal(false);\n      // Utilizei o filter para criar uma nova lista removendo o item selecionado\n      const newTechs = user.techs.filter((tech) => tech.id !== id);\n      // Atualizei techs inserindo a nova lista\n      setUser({ ...user, techs: newTechs });\n    } catch (error) {\n      console.log(error);\n      toast.error(\"Tecnologia não pôde ser excluída\");\n    }\n  };\n\n  return (\n    <TechsContext.Provider\n      value={{\n        addTechsModal,\n        editTechsModal,\n        deleteTechsModal,\n        showAddModal,\n        setShowAddModal,\n        showEditAndDeleteModal,\n        setShowEditAndDeleteModal,\n        currentTech,\n        setCurrentTech,\n      }}\n    >\n      {children}\n    </TechsContext.Provider>\n  );\n};\n"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,UAAxB,EAAoCC,QAApC,QAAoD,OAApD;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SAASC,WAAT,QAA4B,eAA5B;;AAEA,OAAO,MAAMC,YAAY,gBAAGN,aAAa,CAAC,EAAD,CAAlC;AAEP,OAAO,MAAMO,aAAa,GAAG,QAAkB;EAAA;;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EAC7C,MAAM;IAAEC,IAAF;IAAQC;EAAR,IAAoBT,UAAU,CAACI,WAAD,CAApC;EAEA,MAAM,CAACM,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,CAAC,KAAD,CAAhD;EACA,MAAM,CAACW,sBAAD,EAAyBC,yBAAzB,IAAsDZ,QAAQ,CAAC,KAAD,CAApE;EACA,MAAM,CAACa,WAAD,EAAcC,cAAd,IAAgCd,QAAQ,CAAC,EAAD,CAA9C;;EAEA,MAAMe,aAAa,GAAG,MAAOC,IAAP,IAAgB;IACpC;IACA,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMf,WAAW,CAACgB,IAAZ,CAAiB,cAAjB,EAAiCF,IAAjC,CAAvB;MACAf,KAAK,CAACkB,OAAN,CAAc,gCAAd;MACAT,eAAe,CAAC,KAAD,CAAf,CAHE,CAIF;;MACAF,OAAO,CAAC,EAAE,GAAGD,IAAL;QAAWa,KAAK,EAAE,CAAC,GAAGb,IAAI,CAACa,KAAT,EAAgBH,QAAQ,CAACD,IAAzB;MAAlB,CAAD,CAAP;IACD,CAND,CAME,OAAOK,KAAP,EAAc;MACdC,OAAO,CAACC,GAAR,CAAYF,KAAZ;MACApB,KAAK,CAACoB,KAAN,CAAY,qDAAZ;IACD;EACF,CAZD;;EAcA,MAAMG,cAAc,GAAG,OAAOR,IAAP,EAAaS,EAAb,KAAoB;IACzC;IACA,IAAI;MACF,MAAMvB,WAAW,CAACwB,GAAZ,CAAiB,gBAAeD,EAAG,EAAnC,EAAsCT,IAAtC,CAAN;MACAf,KAAK,CAACkB,OAAN,CAAc,iCAAd;MACAP,yBAAyB,CAAC,KAAD,CAAzB,CAHE,CAIF;;MACA,MAAMe,QAAQ,GAAGpB,IAAI,CAACa,KAAL,CAAWQ,GAAX,CAAgBC,IAAD,IAAU;QACxC;QACA,IAAIA,IAAI,CAACJ,EAAL,KAAYA,EAAhB,EAAoB;UAClB;UACA,OAAO,EAAE,GAAGI,IAAL;YAAWC,MAAM,EAAEd,IAAI,CAACc;UAAxB,CAAP;QACD,CAHD,MAGO;UACL;UACA,OAAOD,IAAP;QACD;MACF,CATgB,CAAjB,CALE,CAeF;;MACArB,OAAO,CAAC,EAAE,GAAGD,IAAL;QAAWa,KAAK,EAAEO;MAAlB,CAAD,CAAP;IACD,CAjBD,CAiBE,OAAON,KAAP,EAAc;MACdC,OAAO,CAACC,GAAR,CAAYF,KAAZ;MACApB,KAAK,CAACoB,KAAN,CAAY,iCAAZ;IACD;EACF,CAvBD;;EAyBA,MAAMU,gBAAgB,GAAG,MAAON,EAAP,IAAc;IACrC;IACA,IAAI;MACF,MAAMvB,WAAW,CAAC8B,MAAZ,CAAoB,gBAAeP,EAAG,EAAtC,CAAN;MACAxB,KAAK,CAACkB,OAAN,CAAc,kCAAd;MACAP,yBAAyB,CAAC,KAAD,CAAzB,CAHE,CAIF;;MACA,MAAMe,QAAQ,GAAGpB,IAAI,CAACa,KAAL,CAAWa,MAAX,CAAmBJ,IAAD,IAAUA,IAAI,CAACJ,EAAL,KAAYA,EAAxC,CAAjB,CALE,CAMF;;MACAjB,OAAO,CAAC,EAAE,GAAGD,IAAL;QAAWa,KAAK,EAAEO;MAAlB,CAAD,CAAP;IACD,CARD,CAQE,OAAON,KAAP,EAAc;MACdC,OAAO,CAACC,GAAR,CAAYF,KAAZ;MACApB,KAAK,CAACoB,KAAN,CAAY,kCAAZ;IACD;EACF,CAdD;;EAgBA,oBACE,QAAC,YAAD,CAAc,QAAd;IACE,KAAK,EAAE;MACLN,aADK;MAELS,cAFK;MAGLO,gBAHK;MAILtB,YAJK;MAKLC,eALK;MAMLC,sBANK;MAOLC,yBAPK;MAQLC,WARK;MASLC;IATK,CADT;IAAA,UAaGR;EAbH;IAAA;IAAA;IAAA;EAAA,QADF;AAiBD,CA/EM;;GAAMD,a;;KAAAA,a"},"metadata":{},"sourceType":"module"}